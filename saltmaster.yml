---
# run this playbook to install saltmaster
# in almalinux, debian, opensuse and ubuntu
- hosts: saltmaster
  become: yes
  gather_facts: yes

  tasks:
  - name: install common pkgs for RedHat family
    yum:
      name: "{{ item }}"
      state: latest
      update_cache: yes
    with_items:
      - "{{ rpm_pkg }}"
    when: ansible_os_family == "RedHat"

  - name: place salt repo for RedHat family
    template:
      src: template/salt.repo.j2
      dest: /etc/yum.repos.d/salt.repo
      mode: '0644'
    when: ansible_os_family == "RedHat"

  - name: install salt-master for RedHat family
    yum:
      name: "{{ salt_package }}"
      state: latest
      update_cache: yes
    when: ansible_os_family == "RedHat"

  - name: install common packages for Ubuntu
    apt:
      name: "{{ deb_package }}"
      state: latest
      update_cache: yes
    when: ansible_os_family == "Debian"

  - name: Add salt key for Ubuntu
    get_url:
      url: "{{ deb_key_url }}"
      dest: /etc/apt/keyrings/salt-archive-keyring.pgp
    when: ansible_os_family == "Debian"

  - name: Add salt repo for Ubuntu
    get_url:
      url: "{{ deb_repo_url }}"
      dest: /etc/apt/sources.list.d/salt.sources
    when: ansible_os_family == "Debian"

  - name: install salt-master in Ubuntu
    apt:
      name: "{{ salt_package }}"
      state: latest
      update_cache: yes
    when: ansible_os_family == "Debian"

  - name: install PyGithub in Opensuse
    zypper:
      name: "{{ suse_pkg }}"
      state: latest
      update_cache: yes
    when: ansible_os_family == "Suse"

  - name: install salt-master in Opensuse
    zypper:
      name: "{{ salt_package }}"
      state: latest
      update_cache: yes
    when: ansible_os_family == "Suse"

  - name: start firewalld service
    service:
      name: firewalld
      enabled: true
      state: started

  - name: Opening firewall ports in saltmaster
    ansible.posix.firewalld:
      port: "{{ item }}"
      permanent: yes
      state: enabled
    with_items: "{{ salt_port }}"
    ignore_errors: true
    when: ansible_os_family == "RedHat"
       or ansible_os_family == "Suse"
       or ansible_os_family == "Debian"

  - name: reload firewalld
    ansible.builtin.service:
      name: firewalld
      state: reloaded

  - name: Create directory for base
    file:
      path: /srv/salt
      state: directory
      mode: '0755'

  - name: Create directory for pillar
    file:
      path: /srv/salt/pillar
      state: directory
      mode: '0755'

  - name: Run the salt-master service
    service:
      name: salt-master
      enabled: true
      state: started

  - name: Place the top file
    template:
      src: template/top.j2
      dest: /srv/salt/top.sls
      mode: '0644'
    tags: top

  - name: Placing configuration files
    template:
      src: template/master_conf.j2
      dest: /etc/salt/master.d/file_gitfs.conf
      mode: '0644'

  - name: Install gitpython through salt-pip
    shell:
      cmd: salt-pip install gitpython

  - name: Placing pillar configuration files
    template:
      src: template/pillar_conf.j2
      dest: /etc/salt/master.d/pillar.conf
      mode: '0644'

  - name: Set auto-accept for minions in salt-master
    lineinfile:
      path: /etc/salt/master
      regexp: '^#auto_accept:'
      line: 'auto_accept: True'

  - name: Restart salt-master service
    service:
      name: salt-master
      state: restarted
